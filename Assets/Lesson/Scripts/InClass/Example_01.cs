using System.Collections;
using System.Collections.Generic;
using UnityEngine;

#region 유니티 엔진
/*

▶ 메시아! 그 이름은 유니티


º 유니티 엔진의 장점

- 멀티 (크로스) 플랫폼 지원
- 통합 개발 환경 지원
- 통합 에셋 관리 시스템 지원
★
- 활성화된 커뮤니티 지원
- 스크립팅 시스템 지원 (런타임, 에디터)
- 파티클 시스템 지원
- 2D 시스템 지원 (스프라이트, 타일 맵)
- 렌더링 시스템 지원
- 셰이더 시스템 지원
- 사운드 시스템 지원
- 물리 시스템 지원
- 지형 시스템 지원
- 애니메이션 시스템 지원
- 프로파일링(분석) 시스템 지원
- 에셋 스토어 지원
- 다양한 애니메이션 또한 지원 (레거시 / 메카님)
- 서버에 대한 지식이 빈약해도 네트워크 환경 구축 지원 (포톤 / 미러 등등)

※ 기본적으로 유니티 엔진은 C# 스크립트를 통해서 컴포넌트 프로그래밍 방식을 지원한다.

※ 유니티는 또한 제로부터 시작해서 완성을 해나가는 구조이기 때문에 입문에 좋고, 전체 워크 플로우의 직관성이 좋다.


º 유니티 엔진의 단점

- 만만히 본다.


▶ 컴포넌트 프로그래밍이란?

- 기존 상속 기반 프로그래밍의 단점을 극복하기 위한 프로그래밍 방식
ㄴ 상속 기반이 물체를 정의한 기능을 확장시켜 나가는 개념을 지닌 것에 비해 컴포터는 기반 프로그래밍은 기능을 모음으로써 물체를 정의하는 방식으로 접근한다.
ㄴ 이 개념을 덕 타이핑이라고 한다.

◈ 덕 타이핑 (Duck Typing)
ㄴ 동적 타이핑의 한 종류
ㄴ 객체의 변수 및 메서드의 집합이 객체의 타입을 결정하는 것을 뜻한다.


º 장점

- 기존의 상속 기반 프로그래밍이 변화에 유연하지 못한 반면 컴포넌트 방식은 기능을 추가함으로써 새로운 객체를 표현하기 때문에
상속 기반 방식보다 좀 더 유연한 클래스 구조를 설계하는 것이 가능하다.


º 단점

- 컴포넌트 프로그래밍 방식은 객체를 표현하기 위한 기능, 각 클래스 별로 분산이 되는 경우가 많기 때문에 컴포넌트간에
서로 협력 관계를 형성하기 위해서는 필연적으로 로직(프레임워크)이 필요하다.

- 해당 방식은 상속 기반에 비해서 많은 유연성을 제공하는 반면에 퍼포먼스는 떨어진다는 단점이 있다.


▷ 유니티에서의 컴포넌트 기반 프로그래밍

- 유니티 엔진인 컨테이너에 해당하는 게임 객체 (GameObject)와 MonoBehaviour 클래스를 통해 컴포넌트 방식을 제어하는 매커니즘을 제공한다.

- 즉 커스텀 스크립트 컴포넌트는 반드시 MonoBehaviour 클래스를 직 / 간접적으로 상속해야지만 해당 스크립트를 유니티 객체 상에 구동시키는 것이 가능하다.
 
 */
#endregion

#region 메시
/*

- Vertex / Edge / Polygon / Mesh / Texture

※ 대다수의 3D 모델은 정점 -> 폴리곤 -> 메시를 거쳐 완성이 된다.

- 메시는 기본적으로 3D 모델을 구성하는데 굉장히 중요한 개념


º Vertex

- 하나의 점으로 3D의 기본 단위

- 좌표, Position값, UV좌표계, 노말벡터값 등등이 들어가있다.

※ 점이라고 해서 2D 좌표계의 점과 동일시 생각하면 틀렸고, 픽셀과도 다르다.


º Polygon(다각형)

- 최소한의 면 단위 (흔히 삼각형에 비유된다.)


º Mesh(그물)

- 메시는 그물이라고 생각하면 좋다.

- 폴리곤이 모여 만들어진 3D 공간상에 물체


º Static Mesh(정적 메시)

- 시작할 때 메모리를 잡고, 이후에는 연산을 하지 않는다.

- 주로 움직이지 않는 물체다.
 
*/
#endregion


public class Example_01 : MonoBehaviour
{
    void Start()
    {
        
    }

    void Update()
    {
        
    }
}


#region 05.03 과제
/*
과제1. 유니티 에디터 익숙해 지기

- 오늘 배운 내용을 기반으로 기본 도형 오브젝트를 활용해 모형을 제작해 올것
ㄴ 만든 모형은 모두 하나의 씬에 배치할 것
ㄴ 각 모형의 부속품은 최소 20개 이상

- 만들어야 할 모형의 종류는 총 4가지
ㄴ 자동차, 탱크, 헬리콥터, 저택

a. 자동차
ㄴ 자동차는 타이어가 회전할 것을 고려해 만든다.
ㄴ 철심봉 넣을지 말지 잘 생각
ㄴ 자동차 내부를 볼 수 있어야 한다.

b. 탱크
ㄴ 상부와 하부가 따로 회전할 수 있게 계층 구조를 정립한다.
ㄴ 레일 비슷한 그 무언가가 있어야 하고 레일 안에는 바퀴가 존재해야 하며 회전을 염두한다.
ㄴ 또한 포신은 각도를 줄 수 있어야 한다.

c. 헬리콥터
ㄴ 프로펠러의 갯수를 총 2개를 만든다.
ㄴ 메인 프로펠러 / 꼬리 프로펠러
ㄴ 프로펠러는 회전을 고려해야 한다. (본체와 어떻게 연결을 시킬것인지)

d. 저택
ㄴ 필수 : 장작을 태울 수 있는 난로를 만들어야한다.
ㄴ 디자인은 자유
ㄴ 마당, 집, 집 처럼 보이는 그 무언가를 배치할 것
ㄴ 집 내부는 확인이 가능해야 하지만 세부적인 디테일까지는 챙길 필요 없다.

s. 배트 모빌 완성
ㄴ 스폐셜을 완성시 a + b를 안해도 된다.
ㄴ 임원진은 할것...
 
*/
#endregion